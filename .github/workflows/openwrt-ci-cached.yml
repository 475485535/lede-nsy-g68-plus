# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI-With-Cache

on:
  workflow_dispatch:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0

      - name: cache
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          echo 'src-git helloworld https://github.com/fw876/helloworld' >> ./feeds.conf.default
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ==== 下面是定制部分 ====
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_DEVEL=y
          CONFIG_CCACHE=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_6to4=y
          CONFIG_PACKAGE_acme=y
          CONFIG_PACKAGE_acme-deploy=y
          CONFIG_PACKAGE_acme-dnsapi=y
          CONFIG_PACKAGE_acme-notify=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ip6tables-extra=y
          CONFIG_PACKAGE_ip6tables-mod-nat=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          # CONFIG_PACKAGE_iptables-mod-ipsec is not set
          CONFIG_PACKAGE_ipv6helper=y
          # CONFIG_PACKAGE_kmod-crypto-cbc is not set
          # CONFIG_PACKAGE_kmod-crypto-deflate is not set
          # CONFIG_PACKAGE_kmod-crypto-des is not set
          # CONFIG_PACKAGE_kmod-crypto-echainiv is not set
          # CONFIG_PACKAGE_kmod-crypto-hmac is not set
          # CONFIG_PACKAGE_kmod-crypto-md5 is not set
          CONFIG_PACKAGE_kmod-ip6tables-extra=y
          # CONFIG_PACKAGE_kmod-ipsec is not set
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          # CONFIG_PACKAGE_kmod-ipt-ipsec is not set
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          # CONFIG_PACKAGE_kmod-iptunnel6 is not set
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_luci-app-acme=y
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          CONFIG_PACKAGE_luci-app-syncdial=y
          CONFIG_PACKAGE_luci-app-uhttpd=y
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          CONFIG_PACKAGE_luci-app-webadmin=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-acme-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-uhttpd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-webadmin-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_socat=y
          # CONFIG_PACKAGE_strongswan is not set
          CONFIG_PACKAGE_adbyby=y
          CONFIG_PACKAGE_vsftpd-alt=y
          CONFIG_VSFTPD_USE_UCI_SCRIPTS=y
          # ==== 上面是定制部分 ====
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          
          # 默认网络配置
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          # 默认 LAN 配置
          sed -i "3i uci set network.lan.ipaddr='192.168.2.1'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "4i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "5i uci set network.lan.type='bridge'" ./package/lean/default-settings/files/zzz-default-settings # 接口类型：桥接
          sed -i "6i uci set network.lan.ifname='eth2 eth3'" ./package/lean/default-settings/files/zzz-default-settings # 网络端口：多拨所以两个 wan 口, lan 从第三个口开始
          sed -i "7i uci set network.lan.netmask='255.255.255.0'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "8i uci set network.lan.ip6assign='64'" ./package/lean/default-settings/files/zzz-default-settings # IPv6 分配长度

          # 默认 WAN 配置
          sed -i "9i uci set network.wan.proto='pppoe'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "10i uci set network.wan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "11i uci set network.wan.ipv6='auto'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "12i uci set network.wan.keepalive='0'" ./package/lean/default-settings/files/zzz-default-settings

          # 多拨 WAN2 配置
          sed -i "13i uci set network.wan2.proto='pppoe'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "14i uci set network.wan2.ifname='eth1'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "15i uci set network.wan2.ipv6='auto'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "16i uci set network.wan2.keepalive='0'" ./package/lean/default-settings/files/zzz-default-settings

          sed -i "17i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  
      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
