#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: newif-d2

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: 空间清理/环境搭建
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a 
      
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 

          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 

          # 以下为定制化固件选项和说明:
          #

          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #

          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 

          # newifi-d2编译:
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7621=y
          CONFIG_TARGET_ramips_mt7621_DEVICE_d-team_newifi-d2=y
          EOF
          
          #无线开启（闭源驱动）https://github.com/os-win/mtk-openwrt-feeds
          cat >> .config <<EOF
          CONFIG_DEFAULT_kmod-mt7603=y
          CONFIG_DEFAULT_kmod-mt76x2=y
          CONFIG_PACKAGE_wireless-regdb=y
          CONFIG_PACKAGE_kmod-mt76=y
          CONFIG_PACKAGE_kmod-mt76-core=y
          CONFIG_PACKAGE_kmod-mt7603=y
          CONFIG_PACKAGE_kmod-mt76x02-common=y
          CONFIG_PACKAGE_kmod-mt76x2=y
          CONFIG_PACKAGE_kmod-mt76x2-common=y
          CONFIG_PACKAGE_kmod-mt_wifi=y
          CONFIG_MTK_WIFI_DRIVER=y
          CONFIG_MTK_FIRST_IF_MT7615E=y
          CONFIG_MTK_SECOND_IF_NONE=y
          CONFIG_MTK_THIRD_IF_NONE=y
          CONFIG_MTK_RT_FIRST_CARD=7615
          CONFIG_MTK_RT_FIRST_IF_RF_OFFSET=0xc0000
          CONFIG_MTK_MT_WIFI=y
          CONFIG_MTK_MT_WIFI_PATH="mt_wifi"
          CONFIG_MTK_FIRST_IF_EEPROM_FLASH=y
          CONFIG_MTK_RT_FIRST_CARD_EEPROM="flash"
          CONFIG_MTK_WIFI_BASIC_FUNC=y
          CONFIG_MTK_DOT11_N_SUPPORT=y
          CONFIG_MTK_DOT11_VHT_AC=y
          CONFIG_MTK_G_BAND_256QAM_SUPPORT=y
          CONFIG_MTK_BRCM_256QAM_SUPPORT=y
          CONFIG_MTK_VHT_TXBF_2G_EPIGRAM_IE_SUPPORT=y
          CONFIG_MTK_TPC_SUPPORT=y
          CONFIG_MTK_ICAP_SUPPORT=y
          CONFIG_MTK_SPECTRUM_SUPPORT=y
          CONFIG_MTK_BACKGROUND_SCAN_SUPPORT=y
          CONFIG_MTK_SMART_CARRIER_SENSE_SUPPORT=y
          CONFIG_MTK_MT_DFS_SUPPORT=y
          CONFIG_MTK_HDR_TRANS_TX_SUPPORT=y
          CONFIG_MTK_HDR_TRANS_RX_SUPPORT=y
          CONFIG_MTK_DBDC_MODE=y
          CONFIG_MTK_MULTI_PROFILE_SUPPORT=y
          CONFIG_MTK_WSC_INCLUDED=y
          CONFIG_MTK_WSC_V2_SUPPORT=y
          CONFIG_MTK_DOT11W_PMF_SUPPORT=y
          CONFIG_MTK_TXBF_SUPPORT=y
          CONFIG_MTK_IGMP_SNOOP_SUPPORT=y
          CONFIG_MTK_RTMP_FLASH_SUPPORT=y
          CONFIG_MTK_PRE_CAL_TRX_SET1_SUPPORT=y
          CONFIG_MTK_RLM_CAL_CACHE_SUPPORT=y
          CONFIG_MTK_PRE_CAL_TRX_SET2_SUPPORT=y
          CONFIG_MTK_ATE_SUPPORT=y
          CONFIG_MTK_UAPSD=y
          CONFIG_MTK_TCP_RACK_SUPPORT=y
          CONFIG_MTK_RED_SUPPORT=y
          CONFIG_MTK_FIRST_IF_EPAELNA=y
          CONFIG_MTK_WIFI_MODE_AP=y
          CONFIG_MTK_MT_AP_SUPPORT=y
          CONFIG_MTK_WDS_SUPPORT=y
          CONFIG_MTK_MBSS_SUPPORT=y
          CONFIG_MTK_APCLI_SUPPORT=y
          CONFIG_MTK_MAC_REPEATER_SUPPORT=y
          CONFIG_MTK_MUMIMO_SUPPORT=y
          CONFIG_MTK_MU_RA_SUPPORT=y
          CONFIG_MTK_MCAST_RATE_SPECIFIC=y
          CONFIG_MTK_VOW_SUPPORT=y
          CONFIG_MTK_BAND_STEERING=y
          CONFIG_MTK_GREENAP_SUPPORT=y
          CONFIG_MTK_PCIE_ASPM_DYM_CTRL_SUPPORT=y
          CONFIG_MTK_WIFI_MT_MAC=y
          CONFIG_MTK_MT_MAC=y
          CONFIG_MTK_CHIP_MT7615E=y
          CONFIG_PACKAGE_wifi-l1profile=y
          CONFIG_first_card=y
          CONFIG_first_card_name="MT7622"
          CONFIG_first_card_profile_path="/etc/wireless/mediatek/mt7622.1.dat"
          CONFIG_first_card_init_script="/lib/wifi/mt7615e.lua"
          CONFIG_first_card_init_compatible="mt7615e"
          CONFIG_first_card_EEPROM_offset="0x0"
          CONFIG_first_card_EEPROM_size="0x5000"
          CONFIG_first_card_EEPROM_name="e2p"
          CONFIG_first_card_main_ifname="ra0"
          CONFIG_first_card_ext_ifname="ra"
          CONFIG_first_card_wds_ifname="wds"
          CONFIG_first_card_apcli_ifname="apcli"
          CONFIG_first_card_mesh_ifname="mesh"
          CONFIG_first_card_nvram_zone="dev1"
          CONFIG_first_card_single_sku_path="/etc/wireless/mediatek/mt7615e-sku.dat"
          CONFIG_first_card_bf_sku_path="/etc/wireless/mediatek/mt7615e-sku-bf.dat"
          CONFIG_PACKAGE_libiwinfo-lua=y
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_luci-lib-fs=y
          CONFIG_PACKAGE_node=y
          CONFIG_PACKAGE_luci-app-mtwifi=y
          CONFIG_PACKAGE_luci-app-netdata=y
          EOF
          
          #配置LAN网络
          cat >> .config <<EOF
          CONFIG_TARGET_PREINIT_IP="10.0.16.1"
          CONFIG_TARGET_PREINIT_NETMASK="255.255.255.0"
          CONFIG_TARGET_PREINIT_BROADCAST="10.0.16.255"
          EOF
          

          # 固件压缩:
          # cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_GZIP=y
          # EOF

          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF

          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          EOF

          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF

          # USB3.0支持:
          cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF

          # 常用LuCI插件选择:
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-app-adbyby-plus=y
          # CONFIG_PACKAGE_luci-app-aria2=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web=y
          # CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-minidlna=y
          # CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-qbittorrent=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync=y
          # CONFIG_PACKAGE_luci-app-webadmin=y
          # CONFIG_PACKAGE_luci-app-wireguard=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          EOF

          # LuCI主题:
          cat >> .config <<EOF
          # CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          EOF

          # 常用软件包:
          cat >> .config <<EOF
          # CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF

          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h

      - name: 编译固件
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/
