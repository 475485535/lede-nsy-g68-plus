name: Caching with npm

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # 下载文件
    - name: Cache openwrt dl
      uses: actions/cache@v1
      env:
        cache-name: cache-openwrt-dl
      with:
        path: ./dl # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # 工具链
    - name: Cache openwrt staging
      uses: actions/cache@v1
      env:
        cache-name-staging: cache-openwrt-stagingd-dir
      with:
        path: ./staging_dir
        key: ${{ runner.os }}-build-${{ env.cache-name-staging }}
          
    # 工具链
    - name: Cache openwrt hostpkg
      uses: actions/cache@v1
      env:
        cache-name-hostpkg: cache-openwrt-hostpkg
      with:
        path: ./build_dir/hostpkg
        key: ${{ runner.os }}-build-${{ env.cache-name-hostpkg }}
        
    # 工具链
    - name: Cache openwrt hostpkg
      uses: actions/cache@v1
      env:
        cache-name-host: cache-openwrt-host
      with:
        path: ./build_dir/host
        key: ${{ runner.os }}-build-${{ env.cache-name-host }}
        
    # 工具链
    - name: Cache openwrt target
      uses: actions/cache@v1
      env:
        cache-name-target: cache-openwrt-target
      with:
        path: ./build_dir/target-x86_64_musl
        key: ${{ runner.os }}-build-${{ env.cache-name-target }}
        

    # 更新系统，安装必须文件
    - name: Space cleanup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        echo "update done"
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        echo "install done"
        df -h
        
    - name: Update feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        df -h
        
    # 自定义配置
    - name: Generate configuration file
      run: |
        cp ./makeconfig.d/x86_64.config ./.config
        echo "defconfig start"
        make defconfig
        
    # 下载必要
    - name: Make download
      run: |
        make download -j8
        find ./dl/ -size -1024c -exec rm -f {} \;
        df -h



