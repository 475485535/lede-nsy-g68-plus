Welcome to Lean's  git source of OpenWrt and packages
 
 *English guide* are at the end of the article


中文：如何编译自己需要的 OpenWrt 固件

*注意：*
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1, 密码 password

### 编译命令如下:

1. 首先装好 Ubuntu 64bit 系统（推荐  Ubuntu  14 LTS x64）

2. 准备阶段

更新软件信息列表
```bash
sudo apt-get update
```
安装所需工具链
```bash
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
```

3. 拉取源码
```bash
git clone https://github.com/coolsnowwolf/lede
```

4. 切换到 lede 目录，并使用自动配置
```bash
   cd lede
   ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 
```

5. 最后选好你要的路由，输入 `make -j1 V=s` （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

本源码可 100% 编译成功。里面包括了 R9、IPK 等所有源代码

您可自由使用，但源码编译二次发布时请注明我的 GitHub 仓库链接。谢谢合作！

### 特别提示：
1. 源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的。
2. 若你自认是 Koolshare 论坛或者其固件的脑残粉，本人不欢迎你使用本源代码。所以如果你是，那么使用过程中遇到任何问题本人概不回应。
3. 如需讨论问题，欢迎加入 QQ 讨论群：Gargoyle OpenWrt 编译大群 ,号码 872575064 ，加群链接: [点击链接加入群聊【OP共享技术交流群】](https://jq.qq.com/?_wv=1027&k=51yhjb2)


## ENGLISH GUIDE
How to compile your own OpenWrt firmware.

*NOTE: *
1. do not use *root* user to compile it!!!
2. Back-end Address: `192.168.1.1`, Password: `password`

### Start to compile it:

1. Be sure your Ubuntu 64bit work well（Ubuntu  14 LTS x64 RECOMMENDED）

2. Preparation

Update Online Software's Infomation
```bash
sudo apt-get update
```
Install needed toolchains
```bash
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
```

3. Pull Repo
```bash
git clone https://github.com/coolsnowwolf/lede
```

4. Change dir to *lede*，run scripts and use menuconfig to choose your preferred configuration
```bash
   cd lede
   ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 
```

5. Select your Router，and `make -j1 V=s`

Compiled would 100% go well。Included source from R9/IPK.

Use this repo free, but Please note this Github Repo Link for the second release. Thanks!


<hr><hr>
The notes before the revision README.md
Please use "make menuconfig" to  for the toolchain and firmware.

You need to have installed `gcc, binutils, bzip2, flex, python, perl, make,`
`find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.`

Run `./scripts/feeds update -a` to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and `./scripts/feeds install -a` to install symlinks of all of them into
package/feeds/.

Use `make menuconfig` to configure your image.

Simply running `make` will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware, you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.



Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: 
it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. 
Section 7 has more information about this, including the list of additional requirements that are permitted.

